% 4 Antenna Pseudo-doppler DF Simulation
% Jim McCloskey
% (c) 2013 Geon Technologies, LLC
% 3 Dec 2013

close all;
clear all;

Fs = 100000; %complex baseband sample rate
Fc = 35000; % carrier frequency
antennaDwell = 500e-6; %Observation time in sec for each antenna
numSamps = 10000; 

antenna = zeros(4,numSamps); % Array of 4 antennas separated by 1/4 wavelength
antennaSwitchOut = zeros(1,numSamps); %Output of 4:1 antenna switch

% antennaMarker - Used to create the red square wave on the plot. The square wave is high
% for antennas 1 & 2 and low for 3 & 4. Most pseudo-doppler systems compare
% the time between this antenna switch reference and the resulting doppler
% tone to determine LOB
antennaMarker = zeros(1,numSamps);

lobDeg = 45 %Enter a LOB. See diagram for angle and antenna orientation
lobRad = lobDeg*pi/180;

% Generate a complex sinusoid that reaches each antenna at a delay
% determined by the LOB in radians and 1/4 of the signal wavelength.
% Here 1/4 wavelength = 1/4 sinewave cycle = pi/2
antenna(1,:) = complexCarrier(numSamps,Fs,Fc,0);
antenna(2,:) = complexCarrier(numSamps,Fs,Fc,-pi/2*sin(lobRad));
antenna(3,:) = complexCarrier(numSamps,Fs,Fc,-pi/2*(sin(lobRad)+cos(lobRad)));
antenna(4,:) = complexCarrier(numSamps,Fs,Fc,-pi/2*(cos(lobRad)));

% # samples to dwell on each antenna
numSampsToDwell = Fs * antennaDwell;

startSamp = 1;
stopSamp  = numSampsToDwell;
antennaSelect = 1;
counter = 0;

while true
    %Select a dwell's worth of data from each antenna in order
    antennaSwitchOut(startSamp:stopSamp) = antenna(antennaSelect,startSamp:stopSamp);
    
    % Generate the square wave marker for the plot. 1500 is an arbitrary
    % value to make the plot look nice
    if(antennaSelect < 3) 
        antennaMarker(startSamp:stopSamp) = 1500;
    else
        antennaMarker(startSamp:stopSamp) = -1500;
    end
    
    % Update the sample indices to get the next dwell worth of data
    startSamp = startSamp + numSampsToDwell;
    stopSamp  = stopSamp  + numSampsToDwell;
    if stopSamp > numSamps
        break
    end
    counter = counter+1;
    antennaSelect = mod(counter,4)+1;
    
end %while

% Add a some noise if desired
SNR = 15;
noise_scale = 1/(10^((SNR)/20));
noise = noise_scale*randn(size(antennaSwitchOut));
noise = 0; % No noise
antennaSwitchOut = antennaSwitchOut + noise;

% Plot complex FFT of spectrum
%figure();
%plot_cfft (antennaSwitchOut,-Fs/2,Fs/2,1024,4,'Complex Input Spectra');

% Downconvert the samples to complex baseband
f_lpf = 10000; %Probably too wide baseband LPF
baseband = ddc(antennaSwitchOut, Fs, Fc, f_lpf);

figure();
plot_cfft (baseband,-Fs/2,Fs/2,1024,4,'Complex Baseband Spectra');

demodData = FMDemod(baseband);

figure();
plot(demodData(201:1000));
hold on; % Hold plot so other lines can be overlaid
plot(antennaMarker(201:1000),'r');

% This is phase offset is radians to make the sinewave overlay align correctly
% with the FM demodulated impulses; 
calRad = 0.15*pi;
offset = calRad + lobRad;

% The 3300 amplitude and usign the imag component is abitrary & makes the
% plot look nice
sineOverlay = 3300*imag(complexCarrier(numSamps,Fs,1/(4*antennaDwell),offset));
plot(sineOverlay(201:1000),'g');

%Find first riding edge zero crossing of sine overlay. This sine overlay is
% ficticous - the real doppler sinewave work be generated by lowpass
% filtering the FM demod output
zeroCrossingIndex = findZeroCrossing(sineOverlay(201:1000));


lobCorrectionDeg = 334; % this was found emperically by trial/error. Makes the
                        % measured LOB agree with the desired lob 
                        % input at the beginning

% the 360/200 term is because there is 200 samples in one cycle of
% antenna switching. So i Think this technique has 360/200 = 1.8 deg
% of accuracy roughly
measuredLob = lobCorrectionDeg - (360/200)*zeroCrossingIndex

