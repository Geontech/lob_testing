/**************************************************************************

    This is the component code. This file contains the child class where
    custom functionality can be added to the component. Custom
    functionality to the base class can be extended here. Access to
    the ports can also be done from this class

**************************************************************************/

#include "lobCalc.h"
#include "peakdetect.h"

PREPARE_LOGGING(lobCalc_i)

lobCalc_i::lobCalc_i(const char *uuid, const char *label) :
    lobCalc_base(uuid, label)
{
	_12valid = false;
	_23valid = false;
	_34valid = false;
	_41valid = false;
}

lobCalc_i::~lobCalc_i()
{
}


int lobCalc_i::serviceFunction()
{
    LOG_DEBUG(lobCalc_i, "serviceFunction() example log message");
    bulkio::InFloatPort::dataTransfer *tmp = dataFloat_In->getPacket(bulkio::Const::BLOCKING);
	if (not tmp) { // No data is available
		return NOOP;
	}

    //Check if hversion is > 0
	if (tmp->SRI.hversion == 0){
		//If 0, set valid variables false and valid property false for component
		std::cout << "DF mode off" << std::endl;
		_12valid = false;
		_23valid = false;
		_34valid = false;
		_41valid = false;

		return NORMAL;
	}
	else{
		//Detect peaks
	    //Generate peak packet
		std::vector<float> peaks;
	    /*
		const double* data;
	    int data_count;
	    int* emi_peaks;
	    int* num_emi_peaks;
	    int max_emi_peaks;
	    int* absop_peaks;
	    int* num_absop_peaks;
	    int max_absop_peaks;
	    double delta;
	    int emi_first;

	    if(peakdetect::detect_peak(data,data_count,emi_peaks,num_emi_peaks,max_emi_peaks,absop_peaks,num_absop_peaks,max_absop_peaks,delta,emi_first)){
	    	std::cout << "error in peak detect" << std::endl;
	    }
	     */
		                //if > threshold
				         //Save peak
		                //if peaks > 0
		                        //Average peak values
			               //Set valid variable true for this pair of antennas

			//Check if all valid variables are true
				//Set valid property true for component
				//Calculate and update LOB
		return NORMAL;
	}
}
